{
    # turn off actuator reservations as they are not needed.
    "make_reservations": false,

    "historian_training": false, #Whether or not to periodically retrain component
                                 # models from historian data.
    "training_frequency": 7, # How often to retrain the models from historian data in days.
    "simulation_mode": true, # Use timestamps from device publishes to determine
                             # when to train or optimize instead of real time clock.

    "command_output": "command output.csv",

    "optimizer_debug": "optimizer output.csv",
    "optimization_frequency": 60, #Frequency of optimization in minutes.
    "optimizer":
    {
        "name": "scenario_b_LA",
        #"use_glpk": true,
        "time_limit": 10,
        "write_lp": true,
        "lp_out_dir": "lps"
    },
    "weather":
    {
        "type": "history",
        "settings":
        {
            "history_data": "scenario_b/Los_Angeles_weather.csv",
            "hours_forecast": 24
        }
    },
    "forecast_models":
    {
        "building_load":
        {
            "type": "history",
            "initial_training_data": "scenario_b/LA_Loads.csv"
#            "training_sources": # Topics to query from historian for training data mapped to names the component expects.
#            {
#                "building/heat_load": "heat_load",
#                "building/cool_load": "cool_load"
#            }
        },
        "solar_pv":
        {
            "type": "zero"
        },
        "natural_gas_cost":
        {
            "type": "history",
            "initial_training_data": "scenario_b/natural_gas_price_LA.csv"
        },
        "electricity_cost":
        {
            "type": "history",
            "initial_training_data": "scenario_b/electricity_price_LA.csv"
        }
    },
    "components":
    [
     {
        "type": "centrifugal_chiller_igv",
        "name": "centrifugal_chiller0",
        # Initial training data for component.
        "initial_training_data": "./scenario_b/Scenario B Chillers.csv",
        # Default parameters if no training data or training sources available.
#        "default_parameters":
#         {
#             "fundata": {
#                 "a": [28.28653004,42.18962324,66.98844306],
#                 "b": [31.44670603,-22.77535742,-149.2493385],
#                 "min": [1.5,3.9,5.1],
#                 "max": [3.9,5.1,6]
#             },
#             "ramp_up": 6,
#             "ramp_down": -6,
#             "start_cost": 15
#        },
#        "training_window": 90, # Length of training data window in days.
#        "training_sources": # Topics to query from historian for training data mapped to names the component expects.
#        {
#            "centrifugal_chiller0/P(kW)": "P(kW)",
#            "centrifugal_chiller0/Qch(tons)": "Qch(tons)"
#        },
        # Output topics for a component
        # Maps the outputs of the component model to actuation point names.
        "outputs":
        {
            "command": "centrifugal_chiller0/command"
        },
        "settings":
        {
            "capacity": 600.0,
            "ramp_up": 6,
            "ramp_down": -6,
            "start_cost": 15,
            "cop": 6.74
        }
     },
     {
        "type": "centrifugal_chiller_igv",
        "name": "centrifugal_chiller1",
        # Initial training data for component.
        "initial_training_data": "./scenario_b/Scenario B Chillers.csv",
        # Default parameters if no training data or training sources available.
#        "default_parameters":
#         {
#             "fundata": {
#                 "a": [28.28653004,42.18962324,66.98844306],
#                 "b": [31.44670603,-22.77535742,-149.2493385],
#                 "min": [1.5,3.9,5.1],
#                 "max": [3.9,5.1,6]
#             },
#             "ramp_up": 6,
#             "ramp_down": -6,
#             "start_cost": 15
#        },
#        "training_window": 90, # Length of training data window in days.
#        "training_sources": # Topics to query from historian for training data mapped to names the component expects.
#        {
#            "centrifugal_chiller1/P(kW)": "P(kW)",
#            "centrifugal_chiller1/Qch(tons)": "Qch(tons)"
#        },
        # Output topics for a component
        # Maps the outputs of the component model to actuation point names.
        "outputs":
        {
            "command": "centrifugal_chiller1/command"
        },
        "settings":
        {
            "capacity": 600.0,
            "ramp_up": 6,
            "ramp_down": -6,
            "start_cost": 15,
            "cop": 6.74
        }
     },
     {
        "type": "battery",
        "name": "battery",
        # Initial training data for component.
        "initial_training_data": "./scenario_b/battery.csv",
        # Default parameters if no training data or training sources available.
        "default_parameters":
        {
            "charge_eff": 0.8,
            "discharge_eff": 0.7
        },
#        "training_window": 90, # Length of training data window in days.
#        "training_sources": # Topics to query from historian for training data mapped to names the component expects.
#        {
#            "battery/power": "power",
#            "battery/soc": "soc"
#        },
        # Output topics for a component
        # Maps the outputs of the component model to actuation point names.
        "outputs":
        {
            "charge_load": "battery/charge_load",
            "discharge_load": "battery/discharge_load"
        },
        "inputs":
        {
            "devices/battery/soc": "soc"
        },
        "settings":
        {
            "capacity": 2000.0,
            "min_power": 0.0,
            "max_power": 500.0,
            "min_soc": 0.3,
            "max_soc": 0.8,
            "efficiency": 0.9
        }
     },
     {
        "type": "micro_turbine_generator",
        "name": "micro_turbine_generator",
        "initial_training_data": "./scenario_b/Scenario B Microturbine.csv",
#         "default_parameters":
#        {
#            "fundata": {
#                "a": [0.005795769,0.007508459,0.01016358],
#                "b":[1.048286489,0.471110067,-0.657316438],
#                "min":[130,337,425],
#                "max":[337,425,500]
#             },
#            "ramp_up": 200,
#            "ramp_down": -200,
#            "start_cost": 10,
#            "min_on": 3,
#            "output": 250
#
#        },
#        "training_window": 90, # Length of training data window in days.
#        "training_sources": # Topics to query from historian for training data mapped to names the component expects.
#        {
#            "micro_turbine_generator/temperature": "temperature",
#            "micro_turbine_generator/power": "power",
#            "micro_turbine_generator/fuel_flow": "fuel_flow",
#            "micro_turbine_generator/air_flow": "air_flow"
#        },
        # Output topics for a component
        # Maps the outputs of the component model to actuation point names.
        "outputs":
        {
            "set_point": "micro_turbine_generator/set_point"
        },
		"settings":
		{
		    "ramp_up": 100,
            "ramp_down": -100,
            "start_cost": 10,
            "min_on": 3,
            "capacity": 244.0,
            "fuel_lhv": 50144.0,
            "temp_derate_threshold": 15.556,
            "temp_derate": 0.12,
            "efficiency": 0.28
		}
     },
     {
        "type": "micro_turbine_generator",
        "name": "reciprocating_engine",
        "initial_training_data": "./scenario_b/Scenario B Recip Engine.csv",
#         "default_parameters":
#        {
#            "fundata": {
#                "a": [0.005795769,0.007508459,0.01016358],
#                "b":[1.048286489,0.471110067,-0.657316438],
#                "min":[130,337,425],
#                "max":[337,425,500]
#             },
#            "ramp_up": 200,
#            "ramp_down": -200,
#            "start_cost": 10,
#            "min_on": 3,
#            "output": 250
#
#        },
#        "training_window": 90, # Length of training data window in days.
#        "training_sources": # Topics to query from historian for training data mapped to names the component expects.
#        {
#            "micro_turbine_generator/temperature": "temperature",
#            "micro_turbine_generator/power": "power",
#            "micro_turbine_generator/fuel_flow": "fuel_flow",
#            "micro_turbine_generator/air_flow": "air_flow"
#        },
        # Output topics for a component
        # Maps the outputs of the component model to actuation point names.
        "outputs":
        {
            "set_point": "reciprocating_engine/set_point"
        },
		"settings":
		{
		    "ramp_up": 500,
            "ramp_down": -500,
            "start_cost": 10,
            "min_on": 3,
            "capacity": 788.0,
            "fuel_lhv": 50144.0,
            "temp_derate_threshold": 15.556,
            "temp_derate": 0.12,
            "efficiency": 0.32
		}
     },
     {
        "type": "absorption_chiller",
        "name": "absorption_chiller",
        # Initial training data for component.
        "initial_training_data": "./scenario_b/Scenario B AbChillers.csv",
        # Default parameters if no training data or training sources available.
#        "default_parameters":
#        {
#             "fundata": {
#                 "a":[1.352948418,0.999815107,0.932180063],
#                 "b":[0.615246616,0.75649994,0.80249177],
#                 "min":[0.25,0.4,0.68],
#                 "max":[0.4,0.68,0.75]
#             }
#        },
#        "training_window": 90, # Length of training data window in days.
#        "training_sources": # Topics to query from historian for training data mapped to names the component expects.
#        {
#            "absorption_chiller/Qin(MMBtu/h)": "Qin(MMBtu/h)",
#            "absorption_chiller/Qch(tons)": "Qch(tons)"
#        },
        # Output topics for a component
        # Maps the outputs of the component model to actuation point names.
        "outputs":
        {
            "command": "absorption_chiller/command"
        },
        "settings":
        {
            "capacity": 155,
            "min_off": 3,
            "min_on": 3,
            "ramp_up": 0.25,
            "ramp_down": -0.25,
            "start_cost": 2,
            "efficiency": 0.70
        }
     },
     {
        "type": "boiler",
        "name": "boiler0",
        # Initial training data for component.
        "initial_training_data": "./scenario_b/boiler.csv",
        # Default parameters if no training data or training sources available.
#        "default_parameters": {
#             "fundata": {
#                 "a": [1.451120189, 1.201299255, 1.450670102],
#                 "b": [0.687845722, 1.267430288, -0.328543131],
#                 "min": [1.2, 2.32, 6.4],
#                 "max": [2.32, 6.4, 8]
#             },
#             "ramp_up": 8,
#             "ramp_down": -8,
#             "start_cost": 0.8
#        },
        # "training_window": 90, # Length of training data window in days.
        # "training_sources": # Topics to query from historian for training data mapped to names the component expects.
        # {
        #     "boiler0/heat_output": "heat_output",
        #     "boiler0/gas_input": "gas_input"
        # },
        # Output topics for a component
        # Maps the outputs of the component model to actuation point names.
        "outputs":
        {
            "command": "boiler0/command"
        },
        "settings":
        {
            "capacity": 6.695,
            "ramp_up": 6.695,
            "ramp_down": -6.695,
            "start_cost": 0.8,
            "efficiency": 0.82
        }
     },
     {
        "type": "boiler",
        "name": "boiler1",
        # Initial training data for component.
        "initial_training_data": "./scenario_b/boiler.csv",
        # Default parameters if no training data or training sources available.
#        "default_parameters": {
#             "fundata": {
#                 "a": [1.451120189, 1.201299255, 1.450670102],
#                 "b": [0.687845722, 1.267430288, -0.328543131],
#                 "min": [1.2, 2.32, 6.4],
#                 "max": [2.32, 6.4, 8]
#             },
#             "ramp_up": 8,
#             "ramp_down": -8,
#             "start_cost": 0.8
#        },
        # "training_window": 90, # Length of training data window in days.
        # "training_sources": # Topics to query from historian for training data mapped to names the component expects.
        # {
        #     "boiler1/heat_output": "heat_output",
        #     "boiler1/gas_input": "gas_input"
        # },
        # Output topics for a component
        # Maps the outputs of the component model to actuation point names.
        "outputs":
        {
            "command": "boiler1/command"
        },
        "settings":
        {
            "capacity": 6.695,
            "ramp_up": 6.695,
            "ramp_down": -6.695,
            "start_cost": 0.8,
            "efficiency": 0.82
        }
     },
       ]

#    "connections": []
#    [
#        ["natural_gas_meter", "micro_turbine_generator"],
#        ["micro_turbine_generator", "heat_recovery_unit"],
#        ["heat_recovery_unit", "absorption_chiller"],
#        ["heat_recovery_unit", "air_handlers"],
#        ["absorption_chiller", "air_handlers"],
#        ["electric_meter", "chiller"],
#        ["chiller", "air_handlers"],
#        ["air_handlers", "building_load"],
#        ["electric_meter", "building_load"],
#        ["micro_turbine_generator", "electric_meter"],
#        ["natural_gas_meter", "boiler"],
#        ["boiler", "air_handlers"]
#    ]

}
